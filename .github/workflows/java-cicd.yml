name: java-cicd
on:
  push:
    branches: [ merge-test ]
  pull_request:
    branches: [ merge-test ]
  workflow_dispatch:
    inputs:
      push_to_docker:
        type: boolean
        description: Docker Push
      deploy_to_test:
        type: boolean
        description: Deploy to Test
      deploy_to_prod:
        type: boolean
        description: Deploy to Prod
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1
        with:
          mysql version: '8'
          mysql database: 'testdb'
          mysql user: 'testuser'
          mysql password: 'testpassword'
          mysql root password: 'rootpassword'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/testdb?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=yes&characterEncoding=UTF-8
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword

  docker:
    name: Docker
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - if: github.event.inputs.push_to_docker == 'true'
        name: Build Image
        working-directory: ./
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapp .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapp --all-tags
  deploy:
    name: Deploy
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - if: github.event.inputs.deploy_to_test == 'true'
        name: Deploy to test
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          SCRIPT_BEFORE: |
            echo "Before deploy"
            cd ${{ secrets.WORK_DIR_TEST }} && chmod +x ./clear-image-cache.sh && ./clear-image-cache.sh
          SCRIPT_AFTER: |
            cd ${{ secrets.WORK_DIR_TEST }} && docker compose pull test && docker compose up -d test
            echo $RSYNC_STDOUT
      - if: github.event.inputs.deploy_to_prod == 'true'
        name: Deploy to prod
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          SCRIPT_BEFORE: |
            echo "Before deploy"
            cd ${{ secrets.WORK_DIR_PROD }} && chmod +x ./clear-image-cache.sh && ./clear-image-cache.sh
          SCRIPT_AFTER: |
            cd ${{ secrets.WORK_DIR_PROD }} && docker compose pull app && docker compose up -d app
            echo $RSYNC_STDOUT